"use strict";
var Promise = require('bluebird');
var child_process = require('child_process');
var pathExists = require('path-exists');

var pkg = require("./package.json");

var exec = child_process.exec;
function getTemp(tocat, unit) {
    return new Promise(function (resolve, reject) {
        exec('cat ' + tocat, function (error, stdout, stderr) {
            if (error) {
                reject(error);
            }
            else {
                if (stdout) {
                    var temp_1;
                    var tempread = parseInt(stdout.replace('\n', ''));
                    if (tempread > 1000) {
                        temp_1 = tempread / 1000;
                    }
                    else {
                        temp_1 = tempread;
                    }
                    resolve(temp_1);
                }
                else {
                    reject('temp error');
                }
            }
        });
    });
}
function temp(unit) {
    return new Promise(function (resolve, reject) {
        var tocat0 = '/sys/class/thermal/thermal_zone0/temp';
<<<<<<< HEAD
        var tocat1 = '/sys/class/thermal/thermal_zone0/temp';
=======
        var tocat1 = '/sys/devices/platform/coretemp.0/hwmon/hwmon1/temp2_input';
>>>>>>> dd8f848e2e1d326de865801463c48657480ad4db
        pathExists(tocat0).then(function (exists) {
            if (exists) {
                getTemp(tocat0).then(function (a) {
                    resolve(a);
                }).catch(function (err) {
                    reject(err);
                });
            }
            else {
            }
        }).catch(function (err) {
            reject(err);
        });
    });
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = temp;

<<<<<<< HEAD
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxJQUFZLE9BQU8sV0FBTSxVQUN6QixDQUFDLENBRGtDO0FBQ25DLElBQVksYUFBYSxXQUFNLGVBRS9CLENBQUMsQ0FGNkM7QUFFOUMsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBSTFDLElBQU0sSUFBSSxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUE7QUFHL0IsaUJBQWlCLEtBQWEsRUFBRSxJQUFhO0lBQ3pDLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBUyxVQUFDLE9BQU8sRUFBRSxNQUFNO1FBRXZDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxFQUFFLFVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNO1lBR3ZDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBQ1IsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFBO1lBQ2pCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFFSixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO29CQUNULElBQUksTUFBSSxDQUFBO29CQUNSLElBQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFBO29CQUNuRCxFQUFFLENBQUMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFDbEIsTUFBSSxHQUFHLFFBQVEsR0FBRyxJQUFJLENBQUE7b0JBQzFCLENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ0osTUFBSSxHQUFHLFFBQVEsQ0FBQTtvQkFDbkIsQ0FBQztvQkFDRCxPQUFPLENBQUMsTUFBSSxDQUFDLENBQUE7Z0JBR2pCLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ0osTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFBO2dCQUV4QixDQUFDO1lBRUwsQ0FBQztRQUVMLENBQUMsQ0FBQyxDQUFBO0lBRU4sQ0FBQyxDQUFDLENBQUE7QUFDTixDQUFDO0FBRUQsY0FBNkIsSUFBYTtJQUN0QyxNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTtRQUUvQixJQUFNLE1BQU0sR0FBRyx1Q0FBdUMsQ0FBQTtRQUN0RCxJQUFNLE1BQU0sR0FBRyx1Q0FBdUMsQ0FBQTtRQUV0RCxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsTUFBTTtZQUMxQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUNULE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxDQUFDO29CQUNuQixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7Z0JBQ2QsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUMsR0FBRztvQkFDVCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7Z0JBRWYsQ0FBQyxDQUFDLENBQUE7WUFFTixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7WUFFUixDQUFDO1FBR0wsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUEsR0FBRztZQUNSLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUVmLENBQUMsQ0FBQyxDQUFDO0lBRVAsQ0FBQyxDQUFDLENBQUE7QUFFTixDQUFDO0FBM0JEO3NCQTJCQyxDQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9cblxuaW1wb3J0ICogYXMgUHJvbWlzZSBmcm9tICdibHVlYmlyZCdcbmltcG9ydCAqIGFzIGNoaWxkX3Byb2Nlc3MgZnJvbSAnY2hpbGRfcHJvY2VzcydcblxuY29uc3QgcGF0aEV4aXN0cyA9IHJlcXVpcmUoJ3BhdGgtZXhpc3RzJyk7XG5cblxuXG5jb25zdCBleGVjID0gY2hpbGRfcHJvY2Vzcy5leGVjXG5cblxuZnVuY3Rpb24gZ2V0VGVtcCh0b2NhdDogc3RyaW5nLCB1bml0Pzogc3RyaW5nKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPG51bWJlcj4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICAgIGV4ZWMoJ2NhdCAnICsgdG9jYXQsIChlcnJvciwgc3Rkb3V0LCBzdGRlcnIpID0+IHtcblxuXG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgaWYgKHN0ZG91dCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgdGVtcFxuICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wcmVhZCA9IHBhcnNlSW50KHN0ZG91dC5yZXBsYWNlKCdcXG4nLCAnJykpXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ZW1wcmVhZCA+IDEwMDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXAgPSB0ZW1wcmVhZCAvIDEwMDBcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXAgPSB0ZW1wcmVhZFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGVtcClcblxuXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCd0ZW1wIGVycm9yJylcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pXG5cbiAgICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0ZW1wKHVuaXQ/OiBzdHJpbmcpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICAgIGNvbnN0IHRvY2F0MCA9ICcvc3lzL2NsYXNzL3RoZXJtYWwvdGhlcm1hbF96b25lMC90ZW1wJ1xuICAgICAgICBjb25zdCB0b2NhdDEgPSAnL3N5cy9jbGFzcy90aGVybWFsL3RoZXJtYWxfem9uZTAvdGVtcCdcblxuICAgICAgICBwYXRoRXhpc3RzKHRvY2F0MCkudGhlbihleGlzdHMgPT4ge1xuICAgICAgICAgICAgaWYgKGV4aXN0cykge1xuICAgICAgICAgICAgICAgIGdldFRlbXAodG9jYXQwKS50aGVuKChhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoYSlcbiAgICAgICAgICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpXG5cbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vPT4gdHJ1ZSBcbiAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIHJlamVjdChlcnIpXG5cbiAgICAgICAgfSk7XG5cbiAgICB9KVxuXG59Il19
=======
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxJQUFZLE9BQU8sV0FBTSxVQUN6QixDQUFDLENBRGtDO0FBQ25DLElBQVksYUFBYSxXQUFNLGVBRS9CLENBQUMsQ0FGNkM7QUFFOUMsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRTFDLElBQU0sR0FBRyxHQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO0FBc0JuQyxJQUFNLElBQUksR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFBO0FBRy9CLGlCQUFpQixLQUFhLEVBQUUsSUFBYTtJQUN6QyxNQUFNLENBQUMsSUFBSSxPQUFPLENBQVEsVUFBQyxPQUFPLEVBQUUsTUFBTTtRQUV0QyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssRUFBRSxVQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTTtZQUd2QyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO2dCQUNSLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQTtZQUNqQixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBRUosRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztvQkFDVCxJQUFJLE1BQUksQ0FBQTtvQkFDUixJQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQTtvQkFDbkQsRUFBRSxDQUFDLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7d0JBQ2xCLE1BQUksR0FBRyxRQUFRLEdBQUcsSUFBSSxDQUFBO29CQUMxQixDQUFDO29CQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNKLE1BQUksR0FBRyxRQUFRLENBQUE7b0JBQ25CLENBQUM7b0JBQ0QsT0FBTyxDQUFDLE1BQUksQ0FBQyxDQUFBO2dCQUdqQixDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQTtnQkFFeEIsQ0FBQztZQUVMLENBQUM7UUFFTCxDQUFDLENBQUMsQ0FBQTtJQUVOLENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQztBQUVELGNBQTZCLElBQWE7SUFDdEMsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07UUFJL0IsSUFBTSxNQUFNLEdBQUcsdUNBQXVDLENBQUE7UUFDdEQsSUFBTSxNQUFNLEdBQUcsMkRBQTJELENBQUE7UUFFMUUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLE1BQU07WUFDMUIsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDVCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsQ0FBQztvQkFDbkIsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBO2dCQUNkLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFDLEdBQUc7b0JBQ1QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO2dCQUVmLENBQUMsQ0FBQyxDQUFBO1lBRU4sQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO1lBRVIsQ0FBQztRQUdMLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFBLEdBQUc7WUFDUixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7UUFFZixDQUFDLENBQUMsQ0FBQztJQUVQLENBQUMsQ0FBQyxDQUFBO0FBRU4sQ0FBQztBQTdCRDtzQkE2QkMsQ0FBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vXG5cbmltcG9ydCAqIGFzIFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnXG5pbXBvcnQgKiBhcyBjaGlsZF9wcm9jZXNzIGZyb20gJ2NoaWxkX3Byb2Nlc3MnXG5cbmNvbnN0IHBhdGhFeGlzdHMgPSByZXF1aXJlKCdwYXRoLWV4aXN0cycpO1xuXG5jb25zdCBwa2c9cmVxdWlyZShcIi4vcGFja2FnZS5qc29uXCIpIC8vIHNlcnZlIHBlciBwcmVuZGVydGkgbGEgdmVyc2lvbmUgZGVsbGEgYXBpIGNvbiBwa2cudmVyc2lvblxuXG5cbmludGVyZmFjZSBJY29yZXMge1xuXG50ZW1wOm51bWJlcjtcbnVuaXQ6c3RyaW5nXG5jb3JlbnVtYmVyOm51bWJlcjtcbnZlcnNpb246c3RyaW5nO1xufVxuXG5cbmludGVyZmFjZSBJdGVtcCB7XG5cbm1lZGlhOm51bWJlcjtcbnVuaXQ6c3RyaW5nO1xuXG5jb3JlczogSWNvcmVzW107XG5cbn1cblxuXG5jb25zdCBleGVjID0gY2hpbGRfcHJvY2Vzcy5leGVjXG5cblxuZnVuY3Rpb24gZ2V0VGVtcCh0b2NhdDogc3RyaW5nLCB1bml0Pzogc3RyaW5nKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlPEl0ZW1wPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cbiAgICAgICAgZXhlYygnY2F0ICcgKyB0b2NhdCwgKGVycm9yLCBzdGRvdXQsIHN0ZGVycikgPT4ge1xuXG5cbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICBpZiAoc3Rkb3V0KSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCB0ZW1wXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRlbXByZWFkID0gcGFyc2VJbnQoc3Rkb3V0LnJlcGxhY2UoJ1xcbicsICcnKSlcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRlbXByZWFkID4gMTAwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcCA9IHRlbXByZWFkIC8gMTAwMFxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVtcCA9IHRlbXByZWFkXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0ZW1wKVxuXG5cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoJ3RlbXAgZXJyb3InKVxuXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSlcblxuICAgIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRlbXAodW5pdD86IHN0cmluZykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cbi8vIHBlciBpIHNpc3RlbWkgbXVsdGljb3JlIHZhbm5vIGNvbnRyb2xsYXRpICsgZmlsZSBlIHZhIGZhdHRhIHVuYSBtZWRpYSAoc2Ugc2lhbW8gcHBpZ25vbGkpXG5cbiAgICAgICAgY29uc3QgdG9jYXQwID0gJy9zeXMvY2xhc3MvdGhlcm1hbC90aGVybWFsX3pvbmUwL3RlbXAnIC8vIGNvbnRyb2xsYSBzZSBkYSBxdWFsY2hlIHBhcnRlIGNpIHNvbm8gbWluaW1pIGUgbWFzc2ltaVxuICAgICAgICBjb25zdCB0b2NhdDEgPSAnL3N5cy9kZXZpY2VzL3BsYXRmb3JtL2NvcmV0ZW1wLjAvaHdtb24vaHdtb24xL3RlbXAyX2lucHV0JyAvLyBxdWkgaSBtaW5pbWkgZSBtYXNzaW1pIGNpIHNvbm8gc2ljdXJvXG5cbiAgICAgICAgcGF0aEV4aXN0cyh0b2NhdDApLnRoZW4oZXhpc3RzID0+IHtcbiAgICAgICAgICAgIGlmIChleGlzdHMpIHtcbiAgICAgICAgICAgICAgICBnZXRUZW1wKHRvY2F0MCkudGhlbigoYSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGEpXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKVxuXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLz0+IHRydWUgXG4gICAgICAgIH0pLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICByZWplY3QoZXJyKVxuXG4gICAgICAgIH0pO1xuXG4gICAgfSlcblxufSJdfQ==
>>>>>>> dd8f848e2e1d326de865801463c48657480ad4db
